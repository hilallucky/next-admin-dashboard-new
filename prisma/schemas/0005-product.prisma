model Product {
    id         Int       @id @default(autoincrement())
    uid        String    @unique @default(cuid())
    code       String    @unique
    name       String
    supplierId Int?      @default(null) @relation(fields: [uid], references: [uid]) @onDelete(setNull) @onUpdate(cascade) @onDelete(setNull)
    quantity   Int
    status     Int       @default(0)
    createdBy  Int?
    createdAt  DateTime  @default(now())
    updatedBy  Int?
    updatedAt  DateTime? @updatedAt
    deletedBy  Int?
    deletedAt  DateTime?

    supplier             Supplier              @relation(fields: [supplierId], references: [id])
    orderDetails         PurchaseOrderDetail[]
    custQuotationDetails CustQuotationDetail[]
    productAliases       ProductAlias[]

    createdProductByUser User? @relation("ProductCreatedBy", fields: [createdBy], references: [id])
    updatedProductByUser User? @relation("ProductUpdatedBy", fields: [updatedBy], references: [id])
    deletedProductByUser User? @relation("ProductDeletedBy", fields: [deletedBy], references: [id])

    @@map("products")
}

model ProductAlias {
    id         Int       @id @default(autoincrement())
    uid        String    @unique @default(cuid())
    code       String    @unique
    name       String
    supplierId Int
    productId  Int
    status     Int       @default(0)
    createdBy  Int?
    createdAt  DateTime  @default(now())
    updatedBy  Int?
    updatedAt  DateTime? @updatedAt
    deletedBy  Int?
    deletedAt  DateTime?

    supplier Supplier @relation(fields: [supplierId], references: [id])
    product  Product  @relation(fields: [productId], references: [id])

    createdProductAliasByUser User? @relation("ProductAliasCreatedBy", fields: [createdBy], references: [id])
    updatedProductAliasByUser User? @relation("ProductAliasUpdatedBy", fields: [updatedBy], references: [id])
    deletedProductAliasByUser User? @relation("ProductAliasDeletedBy", fields: [deletedBy], references: [id])

    @@map("product_aliases")
}
